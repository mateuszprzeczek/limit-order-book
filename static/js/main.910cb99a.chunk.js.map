{"version":3,"sources":["hooks/useDropdown.js","InputComponent.js","OrderBook/Add.js","Orders/Order.js","Inventory.js","App.js","reportWebVitals.js","index.js"],"names":["useDropdown","defaultState","label","options","useState","state","setState","id","htmlFor","value","onChange","e","target","onBlur","map","option","InputComponent","this","props","type","placeholder","event","React","Component","Add","orders","setOrders","setId","limitPrice","setLimitPrice","quantity","setQuantity","side","SideDropdown","onClick","preventDefault","stopPropagation","newOrder","newOrders","bind","Order","Inventory","orderComponents","order","Fragment","length","to","App","className","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.910cb99a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst useDropdown = (defaultState, label, options) => {\r\n    const [state, setState] = useState(defaultState);\r\n\r\n    const id = `use-dropdown-${label}`;\r\n\r\n    const Dropdown = () => {\r\n        return (\r\n            <label htmlFor={id}>\r\n                {label}\r\n                <select\r\n                    id={id}\r\n                    value={state}\r\n                    onChange={(e) => setState(e.target.value)}\r\n                    onBlur={(e) => setState(e.target.value)}\r\n                >\r\n                    {options.map((option) => {\r\n                        return (\r\n                            <option key={option} value={option}>\r\n                                {option}\r\n                            </option>\r\n                        );\r\n                    })}\r\n                </select>\r\n            </label>\r\n        );\r\n    };\r\n    return [state, Dropdown, setState];\r\n};\r\n\r\nexport default useDropdown;\r\n","import React from \"react\";\r\n\r\nexport class InputComponent extends React.Component {\r\n    render() {\r\n        const { label, state, setState, type = \"text\" } = this.props;\r\n        const id = `component-input-${label}`;\r\n\r\n        return (\r\n            <label htmlFor={id}>\r\n                {label}\r\n                <input\r\n                    id={id}\r\n                    type={type}\r\n                    value={state}\r\n                    placeholder=\"\"\r\n                    onChange={(event) => setState(event.target.value)}\r\n                />\r\n            </label>\r\n        );\r\n    }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport useDropdown from \"../hooks/useDropdown\";\r\nimport { InputComponent } from \"../InputComponent\";\r\n\r\nexport const Add = ({ orders, setOrders }) => {\r\n    const [id, setId] = useState(\"\");\r\n    const [limitPrice, setLimitPrice] = useState(\"\");\r\n    const [quantity, setQuantity] = useState(\"\");\r\n\r\n    const sides = [\"Buy\", \"Sell\"];\r\n    const [side, SideDropdown] = useDropdown(\"\", \"Side\", sides);\r\n\r\n    const addOrder = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const newOrder = {\r\n            id: id,\r\n            side: side,\r\n            limitPrice: limitPrice,\r\n            quantity: quantity,\r\n        };\r\n        const newOrders = [...orders, newOrder];\r\n        setOrders(newOrders);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {id}\r\n            <form>\r\n                <InputComponent\r\n                    label=\"id\"\r\n                    state={id}\r\n                    setState={setId}\r\n                />\r\n                <SideDropdown />\r\n                <InputComponent\r\n                    label=\"LimitPrice\"\r\n                    state={limitPrice}\r\n                    setState={setLimitPrice}\r\n                />\r\n                <InputComponent\r\n                    label=\"quantity\"\r\n                    state={quantity}\r\n                    setState={setQuantity}\r\n                    type=\"number\"\r\n                />\r\n\r\n                <br />\r\n                <button onClick={addOrder.bind(this)}>Dodaj</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Order = ({ id, side, limitPrice, quantity }) => {\r\n    // return React.createElement(\"div\", {}, [\r\n    //     React.createElement(\"h2\", {}, title),\r\n    //     React.createElement(\"h3\", {}, author),\r\n    //     React.createElement(\"h3\", {}, year),\r\n    // ]);\r\n    return (\r\n        <div>\r\n            <hr />\r\n            <h2> {id}</h2>\r\n            <h3> {side}</h3>\r\n            <h3>{limitPrice} </h3>\r\n            <h3>{quantity}</h3>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"@reach/router\";\r\nimport { Order } from \"./Orders/Order\";\r\n\r\nexport const Inventory = ({ orders }) => {\r\n    const orderComponents = orders.map((order) => {\r\n        return (\r\n            <Order\r\n                key={order.id}\r\n                id={order.id}\r\n                side={order.side}\r\n                limitPrice={order.limitPrice}\r\n                quantity={order.quantity}\r\n            />\r\n        );\r\n    });\r\n    return (\r\n        <React.Fragment>\r\n            {orders.length === 0 ? <h3>No Orders</h3> : orderComponents}\r\n            <Link to=\"/add\">ZarzÄ…dzaj inwentarzem</Link>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router, Link } from \"@reach/router\";\nimport { Add } from \"./OrderBook/Add\";\nimport { Inventory } from \"./Inventory\";\n\nimport './App.css';\n\nfunction App() {\n  const [orders, setOrders] = useState([]);\n  return (\n    <div className=\"App\">\n     <Link to=\"/\">\n                    <h1>Limit Order Book v1</h1>\n                </Link>\n                <Router>\n                    <Add orders={orders} setOrders={setOrders} path=\"/add\"></Add>\n                    <Inventory orders={orders} path=\"/\" />\n                </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}