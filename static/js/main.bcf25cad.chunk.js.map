{"version":3,"sources":["hooks/useDropdown.js","InputComponent.js","OrderBook/Add.js","Orders/Order.js","Inventory.js","App.js","reportWebVitals.js","index.js"],"names":["useDropdown","defaultState","label","options","useState","state","setState","id","htmlFor","value","onChange","e","target","onBlur","map","option","InputComponent","this","props","type","placeholder","event","React","Component","Add","orders","setOrders","buyers","setBuyers","setId","limitPrice","setLimitPrice","quantity","setQuantity","message","side","SideDropdown","sortOrders","sort","A","B","cancelOrder","order","filter","item","console","log","newOrders","active","newOrder","updOrders","parseInt","onClick","preventDefault","stopPropagation","length","sellOrders","el","tmp","updOrder","updSellers","newSeller","newSellers","seller","sQuantity","ordQuantity","max","Math","i","m","buyOrders","updBuyers","newBuyer","newBuyers","buyer","bQuantity","bind","Order","Inventory","orderComponents","Fragment","to","App","sellers","setSellers","className","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcf25cad.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst useDropdown = (defaultState, label, options) => {\r\n    const [state, setState] = useState(defaultState);\r\n\r\n    const id = `use-dropdown-${label}`;\r\n\r\n    const Dropdown = () => {\r\n        return (\r\n            <label htmlFor={id}>\r\n                {label}\r\n                <select\r\n                    id={id}\r\n                    value={state}\r\n                    onChange={(e) => setState(e.target.value)}\r\n                    onBlur={(e) => setState(e.target.value)}\r\n                >\r\n                    {options.map((option) => {\r\n                        return (\r\n                            <option key={option} value={option}>\r\n                                {option}\r\n                            </option>\r\n                        );\r\n                    })}\r\n                </select>\r\n            </label>\r\n        );\r\n    };\r\n    return [state, Dropdown, setState];\r\n};\r\n\r\nexport default useDropdown;\r\n","import React from \"react\";\r\n\r\nexport class InputComponent extends React.Component {\r\n    render() {\r\n        const { label, state, setState, type = \"text\" } = this.props;\r\n        const id = `component-input-${label}`;\r\n\r\n        return (\r\n            <label htmlFor={id}>\r\n                {label}\r\n                <input\r\n                    id={id}\r\n                    type={type}\r\n                    value={state}\r\n                    placeholder=\"\"\r\n                    onChange={(event) => setState(event.target.value)}\r\n                />\r\n            </label>\r\n        );\r\n    }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport useDropdown from \"../hooks/useDropdown\";\r\nimport { InputComponent } from \"../InputComponent\";\r\n\r\nexport const Add = ({ orders, setOrders, buyers, setBuyers  }) => {\r\n    const [id, setId] = useState(\"\");\r\n    const [limitPrice, setLimitPrice] = useState(\"\");\r\n    const [quantity, setQuantity] = useState(\"\");\r\n    const [active, setActive] = useState(true);\r\n    const [message, setMessage] = useState('OK')\r\n\r\n    const [sellers, setSellers] = useState([]);\r\n\r\n\r\n    const sides = [\"Buy\", \"Sell\", \"Cancel\"];\r\n    const [side, SideDropdown] = useDropdown(\"Buy\", \"Side\", sides);\r\n\r\n    const addOrder = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n            const newOrder = {\r\n                id: id,\r\n                side: side,\r\n                limitPrice: limitPrice,\r\n                quantity: quantity,\r\n                message: message,\r\n                active: true,\r\n            };\r\n\r\n            if (newOrder.side === \"Buy\") {\r\n                if(!orders.length) {\r\n                    const newOrders = [...orders, newOrder];\r\n                    setOrders(newOrders)\r\n                }\r\n                const activeSellers = orders.filter(el => el.active).filter(el => el.limitPrice <= newOrder.limitPrice)\r\n                const sellOrders = activeSellers.filter(el => el.side === \"Sell\")\r\n                \r\n                if(sellOrders.length) {\r\n                    sortOrders(sellOrders)\r\n                    const length = sellOrders.length;\r\n                    let tmp = 0;\r\n                    let updOrder = null;\r\n                    let updSellers = [];\r\n                    let newSeller = null;\r\n                    let newSellers = [];\r\n                    for (let seller of sellOrders) {\r\n                        if(newOrder.quantity === 0) {\r\n                            break;\r\n                        }\r\n                        if(seller.limitPrice <= newOrder.limitPrice) {\r\n                            let sQuantity = seller.quantity;\r\n                            let ordQuantity = newOrder.quantity;\r\n                            const max = Math.max(sQuantity, ordQuantity);\r\n                            for(let i = 0; i <= max; i++) {\r\n                                sQuantity--\r\n                                ordQuantity--\r\n                                if(ordQuantity === 0 || sQuantity === 0) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (sQuantity === 0) {\r\n                                 updSellers = orders.filter(el => el.id !== seller.id)\r\n                                const m = `fully matched with ${seller.id} (${seller.quantity} @ ${seller.limitPrice})`;\r\n                                 newSeller = {\r\n                                    id: seller.id,\r\n                                    side: seller.side,\r\n                                    limitPrice: seller.limitPrice,\r\n                                    quantity: 0,\r\n                                    message: `Fully matched with ${newOrder.id}`,\r\n                                    active: false,   \r\n                                }\r\n                                newOrder.quantity = ordQuantity\r\n                                newOrder.message = ` ${m}`\r\n\r\n                                 newSellers = [...updSellers, newSeller, newOrder];\r\n                                 setOrders(newSellers)\r\n                                \r\n                            }\r\n                            if (ordQuantity === 0) {\r\n                                updSellers = orders.filter(el => el.id !== seller.id)\r\n                                let m = null;\r\n                                if(sQuantity > 0) {\r\n                                    m = `and ${seller.id} (${sQuantity - ordQuantity} @ ${seller.limitPrice})`\r\n                                } else {\r\n                                    m = `and ${seller.id} (${sQuantity} @ ${seller.limitPrice})`\r\n                                }\r\n                                 newSeller = {\r\n                                    id: seller.id,\r\n                                    side: seller.side,\r\n                                    limitPrice: seller.limitPrice,\r\n                                    active: true,\r\n                                    quantity: sQuantity,\r\n                                    message: ''\r\n                                }\r\n                                newOrder.quantity = ordQuantity\r\n                                 updOrder = {\r\n                                    id: newOrder.id,\r\n                                    side: newOrder.side,\r\n                                    limitPrice: newOrder.limitPrice,\r\n                                    quantity: ordQuantity,\r\n                                    message:  ` ${m}`,\r\n                                    active: false\r\n                                }\r\n                                 newSellers = [...updSellers, newSeller, updOrder]\r\n                                setOrders(newSellers)\r\n                            }\r\n                        } else {\r\n                            tmp += 1;\r\n                        }\r\n                    }\r\n                    \r\n                    if(tmp === length) {\r\n                        const newOrders = [...orders, newOrder];\r\n                        setOrders(newOrders);\r\n                    } \r\n                } else {\r\n                    const newOrders = [...orders, newOrder];\r\n                        setOrders(newOrders);\r\n                }\r\n            } \r\n            if (newOrder.side === \"Sell\") {\r\n                if(!orders.length) {\r\n                    const newOrders = [...orders, newOrder];\r\n                    setOrders(newOrders)\r\n                }\r\n                const activeBuyers = orders.filter(el => el.active).filter(el => el.limitPrice >= newOrder.limitPrice)\r\n                const buyOrders = activeBuyers.filter(el => el.side === \"Buy\")\r\n\r\n                if(orders.length) {\r\n                    sortOrders(buyOrders)\r\n                    const length = buyOrders.length;\r\n                    let tmp = 0;\r\n                    let updOrder = null;\r\n                    let updBuyers = [];\r\n                    let newBuyer = null;\r\n                    let newBuyers = [];\r\n                    for (let buyer of buyOrders) {\r\n                        if(newOrder.quantity === 0) {\r\n                            break;\r\n                        }\r\n                        if(buyer.limitPrice >= newOrder.limitPrice) {\r\n                            let bQuantity = buyer.quantity;\r\n                            let ordQuantity = newOrder.quantity;\r\n                            const max = Math.max(bQuantity, ordQuantity);\r\n                            for(let i = 0; i <= max; i++) {\r\n                                bQuantity--\r\n                                ordQuantity--\r\n                                if(ordQuantity === 0 || bQuantity === 0) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (bQuantity === 0) {\r\n                                 updBuyers = orders.filter(el => el.id !== buyer.id)\r\n                                const m = `Partially matched with ${buyer.id} (${buyer.quantity} @ ${buyer.limitPrice})`;\r\n                                 newBuyer = {\r\n                                    id: buyer.id,\r\n                                    side: buyer.side,\r\n                                    limitPrice: buyer.limitPrice,\r\n                                    quantity: 0,\r\n                                    message: `Fully matched with ${newOrder.id}`,\r\n                                    active: false,\r\n                                }\r\n                                newOrder.quantity = ordQuantity;\r\n                                newOrder.message = `${newOrder.message} ${m}`;\r\n\r\n                                const newBuyers = [...updBuyers, newBuyer, newOrder]\r\n                                setOrders(newBuyers)\r\n                            }\r\n                            if (ordQuantity === 0) {\r\n                                 updBuyers = orders.filter(el => el.id !== buyer.id)\r\n                                let m = null;\r\n                                if(bQuantity > 0) {\r\n                                    m = `fully matched witch ${buyer.id} (${newOrder.quantity} @ ${buyer.limitPrice})`\r\n                                } else {\r\n                                    m = `and ${buyer.id} (${bQuantity} @ ${buyer.limitPrice})`\r\n                                }\r\n                                 newBuyer = {\r\n                                    id: buyer.id,\r\n                                    side: buyer.side,\r\n                                    limitPrice: buyer.limitPrice,\r\n                                    quantity: bQuantity,\r\n                                    message: '',\r\n                                    active: true,\r\n                                }\r\n                                 updOrder = {\r\n                                    id: newOrder.id,\r\n                                    side: newOrder.side,\r\n                                    limitPrice: newOrder.limitPrice,\r\n                                    quantity: ordQuantity,\r\n                                    message: ` ${newOrder.message} ${m}`,\r\n                                    active: false,\r\n                                }\r\n                                 newBuyers = [...updBuyers, newBuyer, updOrder]\r\n                                setOrders(newBuyers)\r\n                            }\r\n                        } else {\r\n                            tmp += 1;\r\n                        }\r\n                    }\r\n                    if(tmp === length) {\r\n                        const newOrders = [...orders, newOrder];\r\n                        setOrders(newOrders);\r\n                    }\r\n                } \r\n            }  if (newOrder.side === 'Cancel') {\r\n                cancelOrder(newOrder.id)\r\n            }\r\n            // } else {\r\n            //     const newOrders = [...orders, newOrder];\r\n            //         setOrders(newOrders);\r\n            // }\r\n            \r\n    };\r\n\r\n    \r\n    const sortOrders = (orders) => {\r\n        orders.sort((A, B) => B.limitPrice - A.limitPrice);\r\n    }\r\n\r\n    const cancelOrder = (id) => {\r\n        const orderArray = orders.filter(item => item.id === id);\r\n        const order = orderArray[0];\r\n        console.log('cancel order ', order)\r\n        const newOrders = orders.filter(item => item.id !== id);\r\n        console.log('cancel  newOrders',newOrders)\r\n       if(!order.active) {\r\n           const newOrder = {\r\n               id: order.id,\r\n               side: order.side,\r\n               limitPrice: order.limitPrice,\r\n               quantity: order.quantity,\r\n               active: false,\r\n               message: \"Failed - no such active order\"\r\n           }\r\n            const updOrders = [...newOrders, newOrder];\r\n            setOrders(updOrders)\r\n       } if(order.active && parseInt(order.quantity) > 0) {\r\n           const newOrder = {\r\n                id: order.id,\r\n                side: order.side,\r\n                limitPrice: order.limitPrice,\r\n                quantity: order.quantity,\r\n                active: false,\r\n                 message:  `${order.id} Cancelled`\r\n           }\r\n           const updOrders = [...newOrders, newOrder];\r\n           setOrders(updOrders)\r\n       } if (parseInt(order.quantity) === 0) {\r\n        const newOrder = {\r\n            id: order.id,\r\n                side: order.side,\r\n                limitPrice: order.limitPrice,\r\n                quantity: order.quantity,\r\n                active: false,\r\n            message: 'Failed - already fully filled'\r\n        }\r\n        const updOrders = [...newOrders, newOrder];\r\n        setOrders(updOrders)\r\n       }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {id}\r\n            <form>\r\n                <InputComponent\r\n                    label=\"id\"\r\n                    state={id}\r\n                    setState={setId}\r\n                />\r\n                <SideDropdown />\r\n                \r\n                <InputComponent\r\n                    label=\"quantity\"\r\n                    state={quantity}\r\n                    setState={setQuantity}\r\n                    type=\"number\"\r\n                />\r\n                <InputComponent\r\n                    label=\"LimitPrice\"\r\n                    state={limitPrice}\r\n                    type=\"number\"\r\n                    setState={setLimitPrice}\r\n                />\r\n\r\n                <br />\r\n                <button onClick={addOrder.bind(this)}>Dodaj</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Order = ({ id, side, limitPrice, quantity, message }) => {\r\n  \r\n    return (\r\n        <div>\r\n           \r\n            <h2> {id} {side} {quantity} @ {limitPrice} {message}</h2>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"@reach/router\";\r\nimport { Order } from \"./Orders/Order\";\r\n\r\nexport const Inventory = ({ orders }) => {\r\n    const orderComponents = orders.map((order) => {\r\n        return (\r\n            <Order\r\n                key={order.id}\r\n                id={order.id}\r\n                side={order.side}\r\n                limitPrice={order.limitPrice}\r\n                quantity={order.quantity}\r\n            />\r\n        );\r\n    });\r\n    return (\r\n        <React.Fragment>\r\n            {orders.length === 0 ? <h3>No Orders</h3> : orderComponents}\r\n            <Link to=\"/\">Menage orders</Link>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router, Link } from \"@reach/router\";\nimport { Add } from \"./OrderBook/Add\";\nimport { Inventory } from \"./Inventory\";\nimport {Order} from './Orders/Order'\n\nimport './App.css';\n\nfunction App() {\n  const [orders, setOrders] = useState([]);\n  \n  const [buyers, setBuyers] = useState([]);\n  const [sellers, setSellers] = useState([]);\n\n  console.log('orders   ', orders)\n  console.log('sellers   ', sellers)\n  \n\n  const orderComponents = orders.map(order => {\n    return (\n      <div className=\"row\" key={order.id}>\n        <Order\n            id={order.id}\n            side={order.side}\n            limitPrice={order.limitPrice}\n            quantity={order.quantity}\n            message={order.message}\n        />\n        <hr />\n      </div>\n    )\n  })\n  \n\n\n//   const buyerComponents = buyers.map((order) => {\n//     console.log('buyer' ,order)\n//     return (\n//       <div className=\"buyer\" key={order.id}>\n//         <Order\n           \n//             message={order.message}\n//         />\n//         <hr />\n//       </div>\n//     );\n// });\n\n//   const sellersComponent = sellers.map((seller) => {\n//     console.log('seller', seller)\n//     return (\n//       <div className=\"seller\" key={seller.id}>\n//        <Order \n        \n//         message={seller.message}\n//        />\n//      </div>\n//    )\n//   });\n\n  return (\n    <div className=\"App\">\n     <Link to=\"/limit-order-book\">\n                    <h1>Limit Order Book v1</h1>\n                </Link>\n                <Router>\n                    <Add orders={orders} setOrders={setOrders} buyers={buyers} setBuyers={setBuyers} sellers={sellers} setSellers={setSellers} path=\"/limit-order-book\"></Add>\n                    <Inventory orders={orders} path=\"/\" />\n                </Router>\n                {orderComponents}\n                <div className=\"row\">\n                {/* {buyerComponents}\n                {sellersComponent} */}\n\n                </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}