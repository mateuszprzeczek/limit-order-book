{"version":3,"sources":["hooks/useDropdown.js","InputComponent.js","OrderBook/Add.js","Orders/Order.js","Inventory.js","App.js","reportWebVitals.js","index.js"],"names":["useDropdown","defaultState","label","options","useState","state","setState","id","htmlFor","value","onChange","e","target","onBlur","map","option","InputComponent","this","props","type","placeholder","event","React","Component","Add","orders","setOrders","buyers","setBuyers","sellers","setSellers","setId","limitPrice","setLimitPrice","quantity","setQuantity","active","setActive","message","side","SideDropdown","addOrderToSide","order","newBuyers","checkSellers","newSellers","checkBuyers","cancelOrder","length","matchingSellers","slice","filter","item","parseInt","sortMatchingSellers","seller","newQuantity","newOrder","newSeller","n","b","matchingBuyers","buyer","newBuyer","sort","A","B","onClick","preventDefault","stopPropagation","newOrders","bind","Order","Inventory","orderComponents","Fragment","to","App","console","log","className","buyerComponents","sellersComponent","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPA+BeA,EA7BK,SAACC,EAAcC,EAAOC,GAAa,IAAD,EACxBC,mBAASH,GADe,mBAC3CI,EAD2C,KACpCC,EADoC,KAG5CC,EAAE,uBAAmBL,GAuB3B,MAAO,CAACG,EArBS,WACb,OACI,wBAAOG,QAASD,EAAhB,UACKL,EACD,wBACIK,GAAIA,EACJE,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAAOL,EAASK,EAAEC,OAAOH,QACnCI,OAAQ,SAACF,GAAD,OAAOL,EAASK,EAAEC,OAAOH,QAJrC,SAMKN,EAAQW,KAAI,SAACC,GACV,OACI,wBAAqBN,MAAOM,EAA5B,SACKA,GADQA,YASZT,I,gCC1BhBU,EAAb,uKACc,IAAD,EAC6CC,KAAKC,MAA/ChB,EADH,EACGA,MAAOG,EADV,EACUA,MAAOC,EADjB,EACiBA,SADjB,IAC2Ba,YAD3B,MACkC,OADlC,EAECZ,EAAE,0BAAsBL,GAE9B,OACI,wBAAOM,QAASD,EAAhB,UACKL,EACD,uBACIK,GAAIA,EACJY,KAAMA,EACNV,MAAOJ,EACPe,YAAY,GACZV,SAAU,SAACW,GAAD,OAAWf,EAASe,EAAMT,OAAOH,iBAb/D,GAAoCa,IAAMC,WCE7BC,EAAM,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,OAAQC,EAAwD,EAAxDA,UAAWC,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAAiB,EAC9D1B,mBAAS,IADqD,mBAC3EG,EAD2E,KACvEwB,EADuE,OAE9C3B,mBAAS,IAFqC,mBAE3E4B,EAF2E,KAE/DC,EAF+D,OAGlD7B,mBAAS,IAHyC,mBAG3E8B,EAH2E,KAGjEC,EAHiE,OAItD/B,oBAAS,GAJ6C,mBAI3EgC,EAJ2E,KAInEC,EAJmE,OAKpDjC,mBAAS,MAL2C,mBAK3EkC,EAL2E,aASrDtC,EAAY,MAAO,OADlC,CAAC,MAAO,OAAQ,YARoD,mBAS3EuC,EAT2E,KASrEC,EATqE,KA4B5EC,EAAiB,SAACC,GACpB,GAAmB,QAAfA,EAAMH,KAAgB,CACtB,IAAMI,EAAS,sBAAOhB,GAAP,CAAee,IAC9Bd,EAAUe,GACVC,EAAaF,GAEjB,GAAmB,SAAfA,EAAMH,KAAiB,CACvB,IAAMM,EAAU,sBAAOhB,GAAP,CAAgBa,IAChCZ,EAAWe,GACXC,EAAYJ,GAEG,WAAfA,EAAMH,MACNQ,EAAYL,EAAMnC,KAIpBqC,EAAe,SAACF,GAClB,GAAIb,EAAQmB,OAAQ,CAChB,IACMC,EADapB,EAAQqB,QACQC,QAAO,SAAAC,GAAI,OAAIC,SAASD,EAAKpB,aAAeqB,SAASX,EAAMV,eAC9FsB,EAAoBL,GAHJ,oBAIGA,GAJH,yBAIPM,EAJO,QAKZ,GAAIA,EAAOrB,UAAYQ,EAAMR,UAAYqB,EAAOnB,OAAQ,CACpD,IAAMoB,EAAcd,EAAMR,SAAWqB,EAAOrB,SAC5C,GAAGsB,EAAc,EACb,iBAEJ,IAAMC,EAAQ,2BACPf,GADO,IAEVR,SAAUsB,EACVlB,QAAQ,sBAAD,OAAwBiB,EAAOhD,GAA/B,YAAqCgD,EAAOrB,SAA5C,cAA0DqB,EAAOvB,WAAjE,OAEL0B,EAAS,2BACRH,GADQ,IAEXrB,SAAU,EACVE,OAAQC,GAAU,KAEhBQ,EAAahB,EAAQsB,QAAO,SAAAC,GAAI,OAAIA,EAAK7C,KAAOgD,EAAOhD,MACvDoD,EAAC,sBAAOd,GAAP,CAAmBa,IAC1B5B,EAAW6B,GACX,IAAMhB,EAAYhB,EAAOwB,QAAO,SAAAC,GAAI,OAAIA,EAAK7C,KAAOmC,EAAMnC,MACpDqD,EAAC,sBAAOjB,GAAP,CAAkBc,IACzB7B,EAAUgC,GAGd,GAAIL,EAAOrB,SAAWQ,EAAMR,UAAYqB,EAAOnB,OAAQ,CACnD,IAAMoB,EAAcD,EAAOrB,SAAWQ,EAAMR,SAC5C,GAAGsB,EAAc,EACb,iBAEJ,IAAMC,EAAQ,2BACPf,GADO,IAEVR,SAAU,EACVE,OAAQC,GAAU,GAClBC,QAAQ,sBAAD,OAAwBiB,EAAOhD,GAA/B,YAAqCgD,EAAOrB,SAA5C,cAA0DqB,EAAOvB,WAAjE,OAEL0B,EAAS,2BACRH,GADQ,IAEXrB,SAAUsB,IAERX,EAAahB,EAAQsB,QAAO,SAAAC,GAAI,OAAIA,EAAK7C,KAAOgD,EAAOhD,MACvDoD,EAAC,sBAAOd,GAAP,CAAmBa,IAC1B5B,EAAW6B,GACX,IAAMhB,EAAYhB,EAAOwB,QAAO,SAAAC,GAAI,OAAIA,EAAK7C,KAAOmC,EAAMnC,MACpDqD,EAAC,sBAAOjB,GAAP,CAAkBc,IACzB7B,EAAUgC,KA5ClB,2BAAoC,IAJpB,iCAsDlBd,EAAc,SAACJ,GACjB,GAAIf,EAAOqB,OAAQ,CACf,IACMa,EADYlC,EAAOuB,QACQC,QAAO,SAAAC,GAAI,OAAIC,SAASD,EAAKpB,aAAeqB,SAASX,EAAMV,eAC5FsB,EAAoBO,GAHL,oBAIGA,GAJH,yBAINC,EAJM,QAKX,GAAIA,EAAM5B,UAAYQ,EAAMR,UAAY4B,EAAM1B,OAAQ,CAClD,IAAMoB,EAAcd,EAAMR,SAAW4B,EAAM5B,SAC3C,GAAGsB,EAAc,EACb,iBAEJ,IAAMC,EAAQ,2BACPf,GADO,IAEVR,SAAUsB,EACVlB,QAAQ,sBAAD,OAAwBwB,EAAMvD,GAA9B,YAAoCuD,EAAM5B,SAA1C,cAAwD4B,EAAM9B,cAEnE+B,EAAQ,2BACPD,GADO,IAEV5B,SAAU,EACVE,OAAQC,GAAU,KAEhBM,EAAYhB,EAAOwB,QAAO,SAAAC,GAAI,OAAIA,EAAK7C,KAAOuD,EAAMvD,MACpDoD,EAAC,sBAAOhB,GAAP,CAAkBoB,IACzBnC,EAAU+B,GACV,IAAMd,EAAahB,EAAQsB,QAAO,SAAAC,GAAI,OAAIA,EAAK7C,KAAOmC,EAAMnC,MACtDqD,EAAC,sBAAOf,GAAP,CAAmBY,IAC1B3B,EAAW8B,GAGf,GAAIE,EAAM5B,SAAWQ,EAAMR,UAAY4B,EAAM1B,OAAQ,CACjD,IAAMoB,EAAcM,EAAM5B,SAAWQ,EAAMR,SAC3C,GAAGsB,EAAc,EACb,iBAEJ,IAAMC,EAAQ,2BACPf,GADO,IAEVR,SAAU,EACVE,OAAQC,GAAU,GAClBC,QAAQ,sBAAD,OAAwBwB,EAAMvD,GAA9B,YAAoCuD,EAAM5B,SAA1C,cAAwD4B,EAAM9B,cAEnE+B,EAAQ,2BACPD,GADO,IAEV5B,SAAUsB,IAERb,EAAYhB,EAAOwB,QAAO,SAAAC,GAAI,OAAIA,EAAK7C,KAAOuD,EAAMvD,MACpDoD,EAAC,sBAAOhB,GAAP,CAAkBoB,IACzBnC,EAAU+B,GACV,IAAMd,EAAahB,EAAQsB,QAAO,SAAAC,GAAI,OAAIA,EAAK7C,KAAOmC,EAAMnC,MACtDqD,EAAC,sBAAOf,GAAP,CAAmBY,IAC1B3B,EAAW8B,KA5CnB,2BAAkC,IAJnB,iCAsDjBN,EAAsB,SAACL,GACzBA,EAAgBe,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE/B,SAAWgC,EAAEhC,aAG5Ca,EAAc,SAACxC,GAClBqB,EAAUD,EAAOwB,QAAO,SAAAC,GAAI,OAAIA,EAAK7C,KAAOA,MAC5CuB,EAAWD,EAAQsB,QAAO,SAAAC,GAAI,OAAIA,EAAK7C,KAAOA,OAcjD,OACI,gCACKA,EACD,iCACI,cAAC,EAAD,CACIL,MAAM,KACNG,MAAOE,EACPD,SAAUyB,IAEd,cAACS,EAAD,IAEA,cAAC,EAAD,CACItC,MAAM,WACNG,MAAO6B,EACP5B,SAAU6B,EACVhB,KAAK,WAET,cAAC,EAAD,CACIjB,MAAM,aACNG,MAAO2B,EACPb,KAAK,SACLb,SAAU2B,IAGd,uBACA,wBAAQkC,QA5LH,SAAC9C,GACdA,EAAM+C,iBACN/C,EAAMgD,kBACN,IAAMZ,EAAW,CACblD,GAAIA,EACJgC,KAAMA,EACNP,WAAYA,EACZE,SAAUA,EACVI,QAASA,EACTF,OAAQA,GAENkC,EAAS,sBAAO7C,GAAP,CAAegC,IAC9B/B,EAAU4C,GAEV7B,EAAegB,IA8KmBc,K,WAA1B,0BCzMHC,EAAQ,SAAC,GAAiD,IAA/CjE,EAA8C,EAA9CA,GAAIgC,EAA0C,EAA1CA,KAAMP,EAAoC,EAApCA,WAAYE,EAAwB,EAAxBA,SAAUI,EAAc,EAAdA,QAEpD,OACI,8BAEI,mCAAM/B,EAAN,IAAWgC,EAAX,IAAkBL,EAAlB,MAA+BF,EAA/B,IAA4CM,QCH3CmC,EAAY,SAAC,GAAgB,IAAdhD,EAAa,EAAbA,OAClBiD,EAAkBjD,EAAOX,KAAI,SAAC4B,GAChC,OACI,cAAC,EAAD,CAEInC,GAAImC,EAAMnC,GACVgC,KAAMG,EAAMH,KACZP,WAAYU,EAAMV,WAClBE,SAAUQ,EAAMR,UAJXQ,EAAMnC,OAQvB,OACI,eAAC,IAAMoE,SAAP,WACuB,IAAlBlD,EAAOuB,OAAe,2CAAqB0B,EAC5C,cAAC,IAAD,CAAME,GAAG,IAAT,+B,MC4DGC,MAtEf,WAAgB,IAAD,EACezE,mBAAS,IADxB,mBACNqB,EADM,KACEC,EADF,OAGetB,mBAAS,IAHxB,mBAGNuB,EAHM,KAGEC,EAHF,OAIiBxB,mBAAS,IAJ1B,mBAINyB,EAJM,KAIGC,EAJH,KAMbgD,QAAQC,IAAI,YAAatD,GACzBqD,QAAQC,IAAI,aAAclD,GAEFJ,EAAOX,KAAI,SAAC4B,GAElC,OADAoC,QAAQC,IAAIrC,GAEV,sBAAKsC,UAAU,MAAf,UACE,cAAC,EAAD,CACIzE,GAAImC,EAAMnC,GACVgC,KAAMG,EAAMH,KACZP,WAAYU,EAAMV,WAClBE,SAAUQ,EAAMR,SAChBI,QAASI,EAAMJ,UAEnB,yBARwBI,EAAMnC,OAHpC,IAeM0E,EAAkBtD,EAAOb,KAAI,SAAC4B,GAElC,OADAoC,QAAQC,IAAIrC,GAEV,sBAAKsC,UAAU,QAAf,UACE,cAAC,EAAD,CACIzE,GAAImC,EAAMnC,GACVgC,KAAMG,EAAMH,KACZP,WAAYU,EAAMV,WAClBE,SAAUQ,EAAMR,SAChBI,QAASI,EAAMJ,UAEnB,yBAR0BI,EAAMnC,OAahC2E,EAAmBrD,EAAQf,KAAI,SAACyC,GACpC,OACE,qBAAKyB,UAAU,SAAf,SACC,cAAC,EAAD,CACCzE,GAAIgD,EAAOhD,GACXgC,KAAMgB,EAAOhB,KACbP,WAAYuB,EAAOvB,WACnBE,SAAUqB,EAAOrB,SACjBI,QAASiB,EAAOjB,WANWiB,EAAOhD,OAYxC,OACE,sBAAKyE,UAAU,MAAf,UACC,cAAC,IAAD,CAAMJ,GAAG,oBAAT,SACe,uDAEJ,eAAC,IAAD,WACI,cAAC,EAAD,CAAKnD,OAAQA,EAAQC,UAAWA,EAAWC,OAAQA,EAAQC,UAAWA,EAAWC,QAASA,EAASC,WAAYA,EAAYqD,KAAK,sBAChI,cAAC,EAAD,CAAW1D,OAAQA,EAAQ0D,KAAK,SAGnCF,EACAC,MC9DFE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.890ba724.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst useDropdown = (defaultState, label, options) => {\r\n    const [state, setState] = useState(defaultState);\r\n\r\n    const id = `use-dropdown-${label}`;\r\n\r\n    const Dropdown = () => {\r\n        return (\r\n            <label htmlFor={id}>\r\n                {label}\r\n                <select\r\n                    id={id}\r\n                    value={state}\r\n                    onChange={(e) => setState(e.target.value)}\r\n                    onBlur={(e) => setState(e.target.value)}\r\n                >\r\n                    {options.map((option) => {\r\n                        return (\r\n                            <option key={option} value={option}>\r\n                                {option}\r\n                            </option>\r\n                        );\r\n                    })}\r\n                </select>\r\n            </label>\r\n        );\r\n    };\r\n    return [state, Dropdown, setState];\r\n};\r\n\r\nexport default useDropdown;\r\n","import React from \"react\";\r\n\r\nexport class InputComponent extends React.Component {\r\n    render() {\r\n        const { label, state, setState, type = \"text\" } = this.props;\r\n        const id = `component-input-${label}`;\r\n\r\n        return (\r\n            <label htmlFor={id}>\r\n                {label}\r\n                <input\r\n                    id={id}\r\n                    type={type}\r\n                    value={state}\r\n                    placeholder=\"\"\r\n                    onChange={(event) => setState(event.target.value)}\r\n                />\r\n            </label>\r\n        );\r\n    }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport useDropdown from \"../hooks/useDropdown\";\r\nimport { InputComponent } from \"../InputComponent\";\r\n\r\nexport const Add = ({ orders, setOrders, buyers, setBuyers, sellers, setSellers }) => {\r\n    const [id, setId] = useState(\"\");\r\n    const [limitPrice, setLimitPrice] = useState(\"\");\r\n    const [quantity, setQuantity] = useState(\"\");\r\n    const [active, setActive] = useState(true);\r\n    const [message, setMessage] = useState('OK')\r\n\r\n\r\n    const sides = [\"Buy\", \"Sell\", \"Cancel\"];\r\n    const [side, SideDropdown] = useDropdown(\"Buy\", \"Side\", sides);\r\n\r\n    const addOrder = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const newOrder = {\r\n            id: id,\r\n            side: side,\r\n            limitPrice: limitPrice,\r\n            quantity: quantity,\r\n            message: message,\r\n            active: active,\r\n        };\r\n        const newOrders = [...orders, newOrder];\r\n        setOrders(newOrders);\r\n\r\n        addOrderToSide(newOrder)\r\n    };\r\n\r\n    const addOrderToSide = (order) => {\r\n        if (order.side === \"Buy\") {\r\n            const newBuyers = [...buyers, order]\r\n            setBuyers(newBuyers)\r\n            checkSellers(order)\r\n        }\r\n        if (order.side === \"Sell\") {\r\n            const newSellers = [...sellers, order];\r\n            setSellers(newSellers)\r\n            checkBuyers(order)\r\n        }\r\n        if (order.side === \"Cancel\") {\r\n            cancelOrder(order.id)\r\n        }\r\n    }\r\n\r\n    const checkSellers = (order) => {\r\n        if (sellers.length) {\r\n            const newSellers = sellers.slice();\r\n            const matchingSellers = newSellers.filter(item => parseInt(item.limitPrice) <= parseInt(order.limitPrice));\r\n            sortMatchingSellers(matchingSellers)\r\n            for (let seller of matchingSellers) {\r\n                if (seller.quantity <= order.quantity && seller.active) {\r\n                    const newQuantity = order.quantity - seller.quantity;\r\n                    if(newQuantity < 0) {\r\n                        continue;\r\n                    }\r\n                    const newOrder = {\r\n                        ...order,\r\n                        quantity: newQuantity,\r\n                        message: `Fully matched with ${seller.id} ${seller.quantity} @ ${seller.limitPrice} `\r\n                    }\r\n                    const newSeller = {\r\n                        ...seller,\r\n                        quantity: 0,\r\n                        active: setActive(false)\r\n                    }\r\n                    const newSellers = sellers.filter(item => item.id !== seller.id);\r\n                    const n = [...newSellers, newSeller]\r\n                    setSellers(n);\r\n                    const newBuyers = buyers.filter(item => item.id !== order.id);\r\n                    const b = [...newBuyers, newOrder]\r\n                    setBuyers(b);\r\n                }\r\n\r\n                if (seller.quantity > order.quantity && seller.active) {\r\n                    const newQuantity = seller.quantity - order.quantity;\r\n                    if(newQuantity < 0) {\r\n                        continue;\r\n                    }\r\n                    const newOrder = {\r\n                        ...order,\r\n                        quantity: 0,\r\n                        active: setActive(false),\r\n                        message: `Fully matched with ${seller.id} ${seller.quantity} @ ${seller.limitPrice} `\r\n                    }\r\n                    const newSeller = {\r\n                        ...seller,\r\n                        quantity: newQuantity,\r\n                    }\r\n                    const newSellers = sellers.filter(item => item.id !== seller.id);\r\n                    const n = [...newSellers, newSeller]\r\n                    setSellers(n);\r\n                    const newBuyers = buyers.filter(item => item.id !== order.id);\r\n                    const b = [...newBuyers, newOrder]\r\n                    setBuyers(b);\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n    const checkBuyers = (order) => {\r\n        if (buyers.length) {\r\n            const newBuyers = buyers.slice();\r\n            const matchingBuyers = newBuyers.filter(item => parseInt(item.limitPrice) >= parseInt(order.limitPrice));\r\n            sortMatchingSellers(matchingBuyers)\r\n            for (let buyer of matchingBuyers) {\r\n                if (buyer.quantity <= order.quantity && buyer.active) {\r\n                    const newQuantity = order.quantity - buyer.quantity;\r\n                    if(newQuantity < 0) {\r\n                        continue;\r\n                    }\r\n                    const newOrder = {\r\n                        ...order,\r\n                        quantity: newQuantity,\r\n                        message: `Fully matched with ${buyer.id} ${buyer.quantity} @ ${buyer.limitPrice}`\r\n                    }\r\n                    const newBuyer = {\r\n                        ...buyer,\r\n                        quantity: 0,\r\n                        active: setActive(false)\r\n                    }\r\n                    const newBuyers = buyers.filter(item => item.id !== buyer.id);\r\n                    const n = [...newBuyers, newBuyer]\r\n                    setBuyers(n);\r\n                    const newSellers = sellers.filter(item => item.id !== order.id);\r\n                    const b = [...newSellers, newOrder]\r\n                    setSellers(b);\r\n                }\r\n\r\n                if (buyer.quantity > order.quantity && buyer.active) {\r\n                    const newQuantity = buyer.quantity - order.quantity;\r\n                    if(newQuantity < 0) {\r\n                        continue;\r\n                    }\r\n                    const newOrder = {\r\n                        ...order,\r\n                        quantity: 0,\r\n                        active: setActive(false),\r\n                        message: `Fully matched with ${buyer.id} ${buyer.quantity} @ ${buyer.limitPrice}`\r\n                    }\r\n                    const newBuyer = {\r\n                        ...buyer,\r\n                        quantity: newQuantity,\r\n                    }\r\n                    const newBuyers = buyers.filter(item => item.id !== buyer.id);\r\n                    const n = [...newBuyers, newBuyer]\r\n                    setBuyers(n);\r\n                    const newSellers = sellers.filter(item => item.id !== order.id);\r\n                    const b = [...newSellers, newOrder]\r\n                    setSellers(b);\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n    const sortMatchingSellers = (matchingSellers) => {\r\n        matchingSellers.sort((A, B) => A.quantity - B.quantity);\r\n    }\r\n\r\n    const cancelOrder = (id) => {\r\n       setBuyers(buyers.filter(item => item.id !== id))\r\n       setSellers(sellers.filter(item => item.id !== id))\r\n    }\r\n\r\n    const changeOrders = (orders, index, q) => {\r\n        const newOrders = orders.slice();\r\n        const order = newOrders[index];\r\n        const newOrder = {\r\n          ...order,\r\n          quantity: q,\r\n        };\r\n        newOrders[index] = newOrder;\r\n          return newOrders;\r\n        };\r\n\r\n    return (\r\n        <div>\r\n            {id}\r\n            <form>\r\n                <InputComponent\r\n                    label=\"id\"\r\n                    state={id}\r\n                    setState={setId}\r\n                />\r\n                <SideDropdown />\r\n                \r\n                <InputComponent\r\n                    label=\"quantity\"\r\n                    state={quantity}\r\n                    setState={setQuantity}\r\n                    type=\"number\"\r\n                />\r\n                <InputComponent\r\n                    label=\"LimitPrice\"\r\n                    state={limitPrice}\r\n                    type=\"number\"\r\n                    setState={setLimitPrice}\r\n                />\r\n\r\n                <br />\r\n                <button onClick={addOrder.bind(this)}>Dodaj</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Order = ({ id, side, limitPrice, quantity, message }) => {\r\n  \r\n    return (\r\n        <div>\r\n           \r\n            <h2> {id} {side} {quantity} @ {limitPrice} {message}</h2>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"@reach/router\";\r\nimport { Order } from \"./Orders/Order\";\r\n\r\nexport const Inventory = ({ orders }) => {\r\n    const orderComponents = orders.map((order) => {\r\n        return (\r\n            <Order\r\n                key={order.id}\r\n                id={order.id}\r\n                side={order.side}\r\n                limitPrice={order.limitPrice}\r\n                quantity={order.quantity}\r\n            />\r\n        );\r\n    });\r\n    return (\r\n        <React.Fragment>\r\n            {orders.length === 0 ? <h3>No Orders</h3> : orderComponents}\r\n            <Link to=\"/\">Menage orders</Link>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router, Link } from \"@reach/router\";\nimport { Add } from \"./OrderBook/Add\";\nimport { Inventory } from \"./Inventory\";\nimport {Order} from './Orders/Order'\n\nimport './App.css';\n\nfunction App() {\n  const [orders, setOrders] = useState([]);\n  \n  const [buyers, setBuyers] = useState([]);\n  const [sellers, setSellers] = useState([]);\n\n  console.log('orders   ', orders)\n  console.log('sellers   ', sellers)\n\n  const orderComponents = orders.map((order) => {\n    console.log(order)\n    return (\n      <div className=\"row\" key={order.id}>\n        <Order\n            id={order.id}\n            side={order.side}\n            limitPrice={order.limitPrice}\n            quantity={order.quantity}\n            message={order.message}\n        />\n        <hr />\n      </div>\n    );\n});\n  const buyerComponents = buyers.map((order) => {\n    console.log(order)\n    return (\n      <div className=\"buyer\" key={order.id}>\n        <Order\n            id={order.id}\n            side={order.side}\n            limitPrice={order.limitPrice}\n            quantity={order.quantity}\n            message={order.message}\n        />\n        <hr />\n      </div>\n    );\n});\n\n  const sellersComponent = sellers.map((seller) => {\n    return (\n      <div className=\"seller\" key={seller.id}>\n       <Order \n        id={seller.id}\n        side={seller.side}\n        limitPrice={seller.limitPrice}\n        quantity={seller.quantity}\n        message={seller.message}\n       />\n     </div>\n   )\n  });\n\n  return (\n    <div className=\"App\">\n     <Link to=\"/limit-order-book\">\n                    <h1>Limit Order Book v1</h1>\n                </Link>\n                <Router>\n                    <Add orders={orders} setOrders={setOrders} buyers={buyers} setBuyers={setBuyers} sellers={sellers} setSellers={setSellers} path=\"/limit-order-book\"></Add>\n                    <Inventory orders={orders} path=\"/\" />\n                </Router>\n                {/* {orderComponents} */}\n                {buyerComponents}\n                {sellersComponent}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}